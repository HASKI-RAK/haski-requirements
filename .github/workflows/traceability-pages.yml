name: Traceability --> GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read
  pages: write       # für deploy-pages
  id-token: write    # für OIDC

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  rtm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout requirements
        uses: actions/checkout@v4

      - name: Checkout frontend
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/haski-frontend
          path: frontend

      - name: Checkout backend
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/HASKI-Backend
          path: backend

      - name: Prepare npm cache directory
        run: mkdir -p ~/.npm

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'yarn'
          cache-dependency-path: frontend/yarn.lock

      - name: Install frontend dependencies
        working-directory: frontend
        run: yarn install

      - name: Run frontend tests (JSON/JUnit Report)
        working-directory: frontend
        run: yarn test:report || true

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install backend dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-json-report
          # Try to install backend requirements, but don't fail if they conflict
          pip install -r requirements.txt || echo "Some backend dependencies failed to install, continuing with basic pytest setup"

      - name: Run backend tests (pytest JSON Report)
        working-directory: backend
        run: |
          mkdir -p reports
          # Run tests that have requirement IDs in their names, or all if none found
          pytest --json-report --json-report-file=reports/pytest-report.json -k "HASKI-REQ" --collect-only -q | grep -q "test session starts" && \
          pytest --json-report --json-report-file=reports/pytest-report.json -k "HASKI-REQ" || \
          echo "No tests with HASKI-REQ IDs found, creating empty report" && \
          echo '{"tests": [], "summary": {"total": 0}}' > reports/pytest-report.json

      - name: Install Python deps (traceability tool)
        run: pip install -r requirements.txt

      - name: Generate traceability matrix
        run: python traceability/build.py --config traceability/config.yaml --debug

      # --- Generate Docs tree & build MkDocs ---
      - name: Install MkDocs & tooling
        run: pip install -r requirements.txt

      - name: Generate docs tree
        run: python scripts/generate_docs.py

      - name: Build MkDocs site
        run: mkdocs build --strict

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: rtm
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
